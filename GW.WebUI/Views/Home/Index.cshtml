@model IEnumerable<GW.BLL.Models.AddressDTO>
@{
    ViewBag.Title = "Home Page";
}


<hr />
<form id="calculate-route">
    <div class="row myform">
        <div class="col-md-6 text-center">
            <div class="ddl">
                <label for="txtFrom">
                    Откуда:
                </label>
                <input type="search" list="character" id="txtFrom">
                <datalist id="character">
                    @foreach (var item in Model)
                    {
                        <option id="@item.AddressId" value="@item.ToString()"></option>
                    }
                </datalist>
                
                    <label for="cmbCity">City</label>
                    <select id="cmbCity">
                        <option value="1">Киев</option>
                    </select>
                
            </div>
        </div>
        &nbsp; &nbsp; &nbsp;
        <div class="col-md-6 text-center">
            <div class="ddl ddl2">
                <label for="txtTo">
                    Куда:
                </label>
                <input type="search" list="character" id="txtTo">
                <datalist id="character">
                    @foreach (var item in Model)
                    {
                        <option id="@item.AddressId" value="@item.ToString()"></option>
                    }
                </datalist>
            </div>
            
            
        </div>
        <p id="lblError" style="color: Red; font-size: 17px;" />
    </div>
    <div class="row myform ddad">
        <div class="col-md-6 text-center"><input type="submit" value="построить маршрут" />&nbsp; &nbsp;</div>
        <div class="col-md-6 text-center"><input type="reset" value="сбросить"/>&nbsp; &nbsp;</div>
    </div>
</form>




















    @*<hr />
    <form id="calculate-route">
        <label for="txtFrom">
            Откуда:
        </label>
        <input type="search" list="character" id="txtFrom">
        <datalist id="character">
            @foreach (var item in Model)
            {
                <option id="@item.AddressId" value="@item.ToString()"></option>
            }
        </datalist>*@
        @*<input type="text" id="txtFrom" name="txtFrom" required="required" placeholder="Откуда"
            size="40" />*@
        @*&nbsp; &nbsp; &nbsp;
        <label for="txtTo">
            Куда:
        </label>*@
        @*<input type="text" id="txtTo" name="txtTo" required="required" placeholder="Куда"
            size="40" />*@
        @*<input type="search" list="character" id="txtTo">
        <datalist id="character">
            @foreach (var item in Model)
            {
                <option id="@item.AddressId" value="@item.ToString()"></option>
            }
        </datalist>
        <br />
        <br />
        <input type="submit" />&nbsp; &nbsp;
        <input type="reset" />&nbsp; &nbsp;
        <p id="lblError" style="color: Red; font-size: 17px;" />
    </form>*@
    <div id="DivMap">
    </div>
    <script>
        var map;
        function initMap() {
            map = new google.maps.Map(document.getElementById('DivMap'), {
                center: { lat: 50.443232, lng: 30.495141 },
                zoom: 16
            });
        }
    </script>
    <script src="http://maps.google.com/maps/api/js?sensor=true"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&callback=initMap&key=AIzaSyBBzv8W0QrcsE1ZW8oTINtWpFYAsAP6YTY"></script>
    <script>
        //For TextBox Search..............
        //google.maps.event.addDomListener(window, 'load', function () {
        //    var places = new google.maps.places.Autocomplete(document.getElementById('txtFrom'));
        //    google.maps.event.addListener(places, 'place_changed', function () {
        //        var place = places.getPlace();
        //    });
        //    var places1 = new google.maps.places.Autocomplete(document.getElementById('txtTo'));
        //    google.maps.event.addListener(places1, 'place_changed', function () {
        //        var place1 = places1.getPlace();
        //    });
        //});

        
        function calculateRoute(rootfrom, rootto) {

            var myOptions = {
                zoom: 12,
                center: new google.maps.LatLng(50.443232, 30.495141),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            var mapObject = new google.maps.Map(document.getElementById("DivMap"), myOptions);

            var directionsService = new google.maps.DirectionsService();
            var directionsRequest = {
                origin: rootfrom,
                destination: rootto,
                travelMode: google.maps.DirectionsTravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC
            };
            directionsService.route(
                directionsRequest,
                function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        new google.maps.DirectionsRenderer({
                            map: mapObject,
                            directions: response
                        });
                    }
                    else
                        $("#lblError").append("Unable To Find Root");
                }
            );
        }

        $(document).ready(function () {
            if (typeof navigator.geolocation == "undefined") {
                $("#lblError").text("Your browser doesn't support the Geolocation API");
                return;
            }
            $("#calculate-route").submit(function (event) {
                event.preventDefault();
                calculateRoute($("#cmbCity").text() + $("#txtFrom").val(), $("#cmbCity").text() + $("#txtTo").val());
            });
        });
    </script>


